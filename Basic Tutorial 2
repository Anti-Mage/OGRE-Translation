基础教程第2课  --相机、光源和阴影
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

教程简介：
---------------------------------------------------------------------------------------------------------------------------------	在本教程中，我们将基于你所学的知识做一些拓展，介绍一些新的OGRE对象的创建。本教程主要处理光源对象并介绍如何使用官员产生阴影-
-它也会包含相机的一些基础的知识。																							  -
--------------------------------------------------------------------------------------------------------------------------------

前提条件
--------------------------------------------------------------------------------------------------------------------------------
	本教程认为你已经知道如何使用C++语言编程并且能够设置和编译Ogre程序。
  	本教程同样认为你已经使用Ogre Wiki Tutorial Framework、CMake或者Ogre Appwizard创建了一个工程。如果没有的话请看http://www.ogre3d.org/tikiwiki/tiki-index.php?page=Setting+Up+An+Application吧。
  	本教程是在前面一个教程的基础上创建的，我们假设你已经完成了前面的教程。
  	
  	当你在学习本教程的时候你应该慢慢的向你的项目中添加代码，编译并观察添加的代码的效果。你也可以在这儿（http://www.ogre3d.org/tikiwiki/tiki-index.php?page=BasicTutorial2Source）看到本教程的最终代码。如果你的代码有问题，你应该比较你的代码和教程的最终代码。
  	

目录--------------------------------------------------------------------------------------------------------------------------
	--前提条件
	--开始
	--相机
		--Ogre相机
		--创建一个相机
	--视口
		--Ogre视口
		--创建视口
	--光线和阴影
		--Ogre支持的阴影类型
		--在OGRE中使用阴影
		--光源的类型
		--创建光源
	--你应该尝试的事情
		--不同的阴影类型
		--光源衰减
		--SceneManager::setAmbientLight
		--视口背景颜色
		--Camera::setFarClipDistance
		--平面
	总结
		--完整代码
		--下一步
---------------------------------------------------目录 结束-----------------------------------------------------------------

开始
—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
	像之前的教程一样，我们使用之前创建好的代码开始我们的教程。我们通过复制TutorialApplication文件并正确的重命名文件和类来创建一个BasicTutorial2类和头文件。后面我们使用复制和重命名前一个教程的文件的方法创建BasicTutorial3、4。不要忘了改变build target。
	我们将会想BasicTutorial2类中添加两个方法：createViewport和createCamera，这两个函数已经在BaseApplication中定义好了，但是在本教程中我们将看看相机和视口实际上是如何创建的。
	将createCamera和createViewports方法的声明添加到你的BasicTutorial2类头文件中：
	-----------------------------------------------------BasicTutorial2 Header-----------------------------------------------
	class BasicTutorial2 : public BaseApplication
	{
	public:
		BasicTutorial2(void);
		virtual ~BasicTutorial2(void);
 
	protected:
		virtual void createScene(void);
		virtual void createCamera(void);
		virtual void createViewports(void);
	};
	-------------------------------------------------------------------------------------------------------------------------
	将createCamera和createViewports方法的定义添加到你的BasicTutorial2类实现文件中：
	-------------------------------------------------------BasicTutorial2.cpp-----------------------------------------------
	//-------------------------------------------------------------------------------------
	BasicTutorial2::BasicTutorial2(void)
	{
	}
	 
	//-------------------------------------------------------------------------------------
	BasicTutorial2::~BasicTutorial2(void)
	{
	}
	 
	//-------------------------------------------------------------------------------------
	void BasicTutorial2::createCamera(void)
	{
	}
	 
	//-------------------------------------------------------------------------------------
	void BasicTutorial2::createViewports(void)
	{
	}
	 
	//-------------------------------------------------------------------------------------
	void BasicTutorial2::createScene(void)
	{
	}
	---------------------------------------------------end of BasicTutorial2.cpp---------------------------------------------
	这应该可以通过编译，在程序运行之前我们应该创建和初始化几个对象。
	
相机
—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
	Ogre 相机
	-------------------------------------------------------------------------------------------------------------------------
		相机是用来观察我们创建的场景的。相机是一个特殊的对象，它在某中程度上有点像场景节点。相机对象有setPosition、yaw、roll和pitch等几个函数，并且你可以把相机附加到任何场景节点上。就像场景节点一样，相机的位置也是相对于其父节点的（尊重长辈是对的）。你可以简单的将相机当做场景节点来进行运动和旋转操作。
	

